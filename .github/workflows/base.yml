name: Build

on: [push] # for testing; TODO restrict to master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        compiler: [{
          "cc": "gcc",
          "cxx": "g++"
         }, {
          "cc": "clang",
          "cxx": "clang++"
        }]
    steps:
    - uses: actions/checkout@v1
      name: checkout
      with:
        clean: true
        fetch-depth: 1
    - name: install dependencies
      run: |
        set -e
        sudo apt-get update || true
        sudo apt-get install -y apt-utils build-essential libssl-dev cmake python3 python3-pip
        sudo pip install conan
    - name: select clang
      if: matrix.compiler.cc == 'clang'
      run: |
        sudo apt-get install -y clang
    - name: cmake
      env:
        CC: ${{ matrix.compiler.cc }}
        CXX: ${{ matrix.compiler.cxx }}
      run: |
        set -e
        conan profile new default
        conan profile update settings.arch=x86_64 default
        conan profile update settings.os=Linux default
        if [ "$CC" = "gcc" ]; then
          conan profile update settings.compiler=gcc default
          conan profile update settings.compiler.libcxx=libstdc++11 default
        fi
        mkdir build
        cd build
        eval `ssh-agent -s`
        set +x
        ./soralog.key <<< '${{ secrets.SORALOGDEP }}'
        export SORALOG_SSH_KEY=$(readlink -f ./soralog.key)
        ./sqlite.key <<< '${{ secrets.SQLITEDEP }}'
        export SQLITE_SHH_KEY=$(readlink -f ./sqlite.key)
        cmake -DPACKAGE_MANAGER=Conan ..
        make
